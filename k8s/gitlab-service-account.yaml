---
# Service Account for GitLab CI/CD
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-ci
  namespace: default
---
# ClusterRole with necessary permissions for GitLab CI/CD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-ci-role
rules:
# Permissions for deploying applications
- apiGroups: [ "apps" ]
  resources: [ "deployments", "replicasets", "pods" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
# Permissions for services and ingresses
- apiGroups: [ "" ]
  resources: [ "services", "pods", "configmaps", "secrets" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
- apiGroups: [ "networking.k8s.io", "extensions" ]
  resources: [ "ingresses" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
# Permissions for namespaces (if you need to create them)
- apiGroups: [ "" ]
  resources: [ "namespaces" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch" ]
# Permissions for custom resources (if you use any)
- apiGroups: [ "*" ]
  resources: [ "*" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
# ClusterRoleBinding to bind the service account to the role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-ci-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-ci-role
subjects:
- kind: ServiceAccount
  name: gitlab-ci
  namespace: default
---
# Secret to store the service account token
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-ci-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: gitlab-ci
type: kubernetes.io/service-account-token
